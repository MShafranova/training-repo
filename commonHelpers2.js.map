{"version":3,"file":"commonHelpers2.js","sources":["../src/js/categories.js","../src/js/booksAPI.js","../src/js/main-list.js"],"sourcesContent":["//Render one book\nfunction renderOneBook(books) {\n  const booksRendered = books.map(el => {\n      const {_id, book_image, title, author} = el;\n      return `<li class=\"books-box-itm\" id=\"${_id}\">\n      <div class=\"books-box-wrap\">\n              <img\n                class=\"books-img\"\n                src=\"${book_image}\"\n                alt=\"${title}\"\n              />\n              <div class=\"books-overlay\">\n                <a href=\"#\" data-id=\"${_id}\" class=\"books-overlay-text\">\n                quick view </a>\n              </div>\n            </div>\n            <div class=\"books-box-desc\">\n              <p class=\"books-box-desc-title\">${title}</p>\n              <p class=\"books-box-desc-author\">${author}</p>\n            </div> \n            </li>`;\n  }).join('');\n\n  return booksRendered;\n} \n//Render top books\nexport const renderTopBooks = (data, booksPerRow) => {;\n  const categoriesTopBooks = data.map(el => {\n      const categorieName = el.list_name;\n      const books = renderOneBook(el.books.slice(0, booksPerRow))\n      return `<div class=\"books-box-holder\">\n        <h3 class=\"books-box-subtitle\">${categorieName}</h3>\n        <ul class=\"books-box-list\">${books}</ul>\n        <button data-categorieName=\"${categorieName}\" class=\"books-btn-see-more\" type=\"button\">see more</button>\n      </div>`;\n  }).join('');\n\n  return `<div class=\"books-container\"><h2 class=\"books-title\">Best Sellers Books</h2>${categoriesTopBooks}</div>`;\n}\n//Render categories\nexport const renderCategoriesList = (data) => {\n  const categoriesItems = data.map(el => {\n    return `<li class=\"categories-itm\"><a href=\"#\" data-categorieName=\"${el.list_name}\">${el.list_name}</a></li>`;\n  }).join('');\n\n  return `<li class=\"categories-itm js-categories-current \"><a href=\"#\" data-categorieName=\"\">All categories</a></li>${categoriesItems}`;\n}\n//Render category books\nexport const renderBooksByCategory = (data, categoryName) => {\n  const books = renderOneBook(data)\n  const categoryMarkup = `<div class=\"books-category-box visually-hidden\">\n<h2 class=\"books-box-title\">${categoryName}</h2>\n        <ul class=\"books-category-list\">${books}</ul>\n        </div>`;\n  return categoryMarkup;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // Cтворення та відображення списку категорій книг\n// const categoriesList = document.querySelector('.categories-list');\n\n// export function generateCategoryListItem(book) {\n//     return `<li class='сategories-itm'><a href=\"\">${book.list_name}</a></li>`;\n// }\n\n// export function renderCategoriesListList(books) {\n//     const markup = books.map(generateCategoryListItem).join('');\n//     categoriesList.innerHTML = markup;\n// }\n// // Функції для генерації HTML-розмітки відображення списку книг\n// // const booksBoxHolder = document.querySelector('.books-box-holder');\n\n// // function generateCategoryTitle(books) {\n// //     return `<h3 class=\"books-box-subtitle\">${books.list_name}</h3>`;\n// // }\n\n// // Викликати функцію з назвою категорії і вставити елемент в DOM\n// // export function insertCategoryTitleIntoDOM(categoryName) {\n// //   const categoryTitleMarkup = generateCategoryTitle(categoryName);\n// //   booksBoxHolder.insertAdjacentHTML('beforeend', categoryTitleMarkup);\n// // }\n\n// export function generateMainBookHTML(book) {\n//     const { book_image, title, author, _id } = book;\n\n//     return `<li class=\"books-category-item\">\n//             <div class=\"books-box-wrap\">\n//               <img\n//                 class=\"books-img\"\n//                 src=\"${book_image}\" \n//                 alt=\"${title}\"\n//               />\n//               <div class=\"books-overlay\">\n//                 <p class=\"books-overlay-text\">quick view</p>\n//               </div>\n//             </div>\n//             <div class=\"books-box-desc\">\n//             <p class=\"books-box-desc-title\">${title}</p>\n//             <p class=\"books-box-desc-author\">${author}</p>\n//             </div>\n//             </li>`;\n// }\n\n// export function generateMainBooksHTML(books) {\n//     return books.map(generateMainBookHTML).join('');\n// }\n// // Функції для генерації HTML-розмітки відображення списку книг конкретної категорії\n\n// const booksList = document.querySelector(\".books-box-list\")\n\n// export function renderCategoriesListMain(books) {\n//     const mainMarkup = generateMainBooksHTML(books);\n//     insertMarkupIntoCategoriesMain(mainMarkup);\n// }\n\n// function insertMarkupIntoCategoriesMain(markup) {\n//     booksList.insertAdjacentHTML('beforeend', markup);\n// }\n// // -----TOP\n// export const renderTopBooks = (data, booksPerRow) => {\n//   const { book_image, title, author, _id } = book\n//   const categoriesTopBooks = data.map(el => {\n//       const categorieName = el.list_name;\n//       return `<div class=\"books-box-holder\">\n//       <h3 class=\"books-box-subtitle\">${categorieName}</h3>\n//       <ul class=\"books-box-list\">\n//       <li class=\"books-box-itm\" id=\"\">\n//       <div class=\"books-box-wrap\">\n//         <img\n//           class=\"books-img\"\n//           src=\"${book_image}\" \n//           alt=\"${title}\"\n//         />\n//         <div class=\"books-overlay\">\n//           <p class=\"books-overlay-text\">quick view</p>\n//         </div>\n//       </div>\n//       <div class=\"books-box-desc\">\n//       <p class=\"books-box-desc-title\">${title}</p>\n//       <p class=\"books-box-desc-author\">${author}</p>\n//       </div>\n//     </li>\n//     </ul>\n//         <button class=\"books-btn-see-more\" type=\"button\" data-categorieName=\"${categorieName}\">see more</button>\n//       </div>`;\n//   }).join('');\n\n//   return `<div class=\"books-container\"><h2 class=\"books-title\">Best Sellers Books</h2>${categoriesTopBooks}</div>`;\n// }\n// // ----CategoryBooks\n// export const renderBooksByCategory = (categoryName) => {\n//   const { book_image, title, author, _id } = book\n//   const categoryMarkup = `<div class=\"books-container\">\n//   <h2 class=\"books-title\">${categoryName}</h2>\n//   <div class=\"books-category-container\">\n//     <ul class=\"books-list\"></ul>\n//   </div>\n// </div>\n// <div class=\"books-category-box visually-hidden\">\n// <h3 class=\"books-box-subtitle\">${categorieName}</h3>\n//         <ul class=\"books-category-list\">\n//           <li class=\"books-category-item\">\n//             <div class=\"books-box-wrap\">\n//               <img\n//                 class=\"books-img\"\n//                 src=\"${book_image}\" \n//                 alt=\"${title}\"\n//               />\n//               <div class=\"books-overlay\">\n//                 <p class=\"books-overlay-text\">quick view</p>\n//               </div>\n//             </div>\n//             <div class=\"books-box-desc\">\n//             <p class=\"books-box-desc-title\">${title}</p>\n//             <p class=\"books-box-desc-author\">${author}</p>\n//             </div>\n//           </li>\n//         </ul>\n//       </div>`;\n\n//   return categoryMarkup;\n// }\n\n\n\n\n// <div class=\"books-box-holder\">\n//       <h3 class=\"books-box-subtitle\">${categorieName}</h3>\n//       <ul class=\"books-box-list\">${books}\n//       <li class=\"books-box-itm\" id=\"\">\n//       <div class=\"books-box-wrap\">\n//         <img\n//           class=\"books-img\"\n//           src=\"${book_image}\" \n//           alt=\"${title}\"\n//         />\n//         <div class=\"books-overlay\">\n//           <p class=\"books-overlay-text\">quick view</p>\n//         </div>\n//       </div>\n//       <div class=\"books-box-desc\">\n//       <p class=\"books-box-desc-title\">${title}</p>\n//       <p class=\"books-box-desc-author\">${author}</p>\n//       </div>\n//     </li>\n//     </ul>\n//         <button class=\"books-btn-see-more\" type=\"button\" data-categorieName=\"${categorieName}\">see more</button>\n//       </div>","// import axios from \"axios\";\n// import { renderTopBooks, renderCategoriesList, renderBooksByCategory } from './categories.js';\n// const BASE_URL = 'https://books-backend.p.goit.global';\n\n// //Fatch for top books\n// export const getTopBooks = async booksPerRow => {\n//   const endpoint = '/books/top-books/';\n//   const fetchUrl = BASE_URL + endpoint;\n\n//   try {\n//     const response = await axios.get(fetchUrl);\n//     return renderTopBooks(response.data, booksPerRow);\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\n// //Fatch for categories\n// export const getCategoryList = async () => {\n//   const endpoint = '/books/category-list/';\n//   const fetchUrl = BASE_URL + endpoint;\n\n//   try {\n//     const response = await axios.get(fetchUrl);\n//     return renderCategoriesList(response.data);\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\n// //Fatch for categories books\n// export const getBooksByCategory = async categoryName => {\n//   const endpoint = '/books/category/';\n//   const fetchUrl = BASE_URL + endpoint;\n//   const params = {\n//     category: categoryName,\n//   };\n\n//   try {\n//     const response = await axios.get(fetchUrl, { params });\n//     return renderBooksByCategory(response.data, categoryName);\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n// // повертає дані однієї книги по id\n// export const getBookInfo = async id => {\n//   const endpoint = `/books/${id}`;\n//   const fetchUrl = BASE_URL + endpoint;\n\n//   try {\n//     const response = await axios.get(fetchUrl);\n//     return response.data;\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport axios from \"axios\";\nimport { renderTopBooks, renderCategoriesList, renderBooksByCategory } from './categories.js';\n\nconst BASE_URL = 'https://books-backend.p.goit.global';\n\nconst fetchData = async (endpoint, params = null) => {\n  const fetchUrl = `${BASE_URL}/books${endpoint}`;\n\n  try {\n    const response = await axios.get(fetchUrl, { params });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getTopBooks = async (booksPerRow) => {\n  const data = await fetchData('/top-books/');\n  return renderTopBooks(data, booksPerRow);\n};\n\nexport const getCategoryList = async () => {\n  const data = await fetchData('/category-list/');\n  return renderCategoriesList(data);\n};\n\nexport const getBooksByCategory = async (categoryName) => {\n  const data = await fetchData('/category/', { category: categoryName });\n  return renderBooksByCategory(data, categoryName);\n};\n\nexport const getBookInfo = async (id) => {\n  return fetchData(`/${id}`);\n};\n\n\n\n\n\n\n\n\n// // Отримання переліку категорій\n// export async function getCategoryList() {\n//   try {\n//     const response = await axios.get(`${BASE_URL}/books/category-list`);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching category list:', error);\n//     throw error;\n//   }\n// }\n\n// // Отримання популярних книг\n// export async function getTopBooks() {\n//   try {\n//     const response = await axios.get(`${BASE_URL}/books/top-books`);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching top books:', error);\n//     throw error;\n//   }\n// }\n\n// // Отримання книг обраної категорії\n// export async function getBooksByCategory(selectedCategory) {\n//   try {\n//     const response = await axios.get(`${BASE_URL}/books/category?category=${selectedCategory}`);\n//     return response.data;\n//   } catch (error) {\n//     console.error(`Error fetching books for category ${selectedCategory}:`, error);\n//     throw error;\n//   }\n// }\n\n// // Отримання детальної інформації про книгу за її ID\n// export async function getBookInfo(bookId) {\n//   try {\n//     const response = await axios.get(`${BASE_URL}/books/${bookId}`);\n//     return response.data;\n//   } catch (error) {\n//     console.error(`Error fetching details for book ID ${bookId}:`, error);\n//     throw error;\n//   }\n// }\n","// import { getTopBooks, getCategoryList, getBooksByCategory } from './booksAPI';\n// const booksContainer = document.querySelector('.books-box');\n// const categoriesListContainer = document.querySelector('.categories-list');\n\n// // ==============================================================\n// //Function for display books\n// export async function showTopBooks() {\n//     const windowWidth = window.innerWidth;\n//     const booksPerRow = booksPerRowFunction(windowWidth);\n//     const renderedTop = await getTopBooks(booksPerRow);\n\n//     booksContainer.innerHTML = renderedTop;\n//     wrapLastWord();\n// };\n// // ==============================================================\n// //Function for display categories\n// export async function showCategories() {\n//     const renderedCategories = await getCategoryList();\n\n//     categoriesListContainer.innerHTML = renderedCategories;\n// };\n// // ==============================================================\n// //Function for display category books\n// export async function showBooksByCategorie(categorieName) {\n//     const renderedBooks = await getBooksByCategory(categorieName);\n\n//      booksContainer.innerHTML = renderedBooks;\n//      wrapLastWord();\n// }\n// // ==============================================================\n// //Function for wrapp last title word\n// function wrapLastWord() {\n//     const title = document.querySelector('.books-box-desc-title');\n//     const textContent = title.textContent.split(\" \");\n//     const lastWord = textContent.pop();\n\n//     const updatedContent = textContent.join(\" \") + (textContent.length > 0 ? ` <span  class=\"books-title-color\">${lastWord}</span>` : lastWord);\n\n//     title.innerHTML = updatedContent;\n// }\n// //Fontiono for detectiong books per row\n// function booksPerRowFunction(windowWith) {\n//     let booksCount = 3;\n\n//     if(windowWith >= 1440) {\n//         booksCount = 5;\n//     } \n    \n//     if(windowWith < 768) {\n//         booksCount = 1;\n//     }\n\n//     return booksCount;\n// }\n\n// // ==============================================================\n// if(booksContainer) {\n//     showTopBooks();\n//     showCategories();\n\n//     categoriesListContainer.addEventListener('click', e => {\n//         e.preventDefault();\n    \n//         const target = e.target;\n    \n//         if(target.tagName === 'A') {\n//             const categorieName = target.dataset.categorieName;\n    \n//             categoriesListContainer.querySelector('.js-categories-current').classList.remove('js-categories-current');\n//             target.classList.add('js-categories-current');\n            \n//             if(categorieName) {\n//                 showBooksByCategorie(categorieName);\n//             } else {\n//                 showTopBooks();\n//             }\n//         }\n//     });\n    \n//     booksContainer.addEventListener('click', e => {\n//         e.preventDefault();\n    \n//         const target = e.target;\n    \n//         if(target.classList.contains('books-btn-see-more')) {\n//             const categorieName = target.dataset.categorieName;\n    \n//             categoriesListContainer.querySelector('.js-categories-current').classList.remove('js-categories-current');\n//             categoriesListContainer.querySelector('[data-categorieName=\"'+categorieName+'\"]').classList.add('js-categories-current');\n            \n//             showBooksByCategorie(categorieName);\n//         }\n//     });\n// }\nimport { getTopBooks, getCategoryList, getBooksByCategory } from './booksAPI.js';\n\nconst booksContainer = document.querySelector('.books-box');\nconst categoriesListContainer = document.querySelector('.categories-list');\n\nconst BOOKS_PER_ROW_MAP = {\n    'default': 3,\n    'largeScreen': 5,\n    'smallScreen': 1\n};\n\n// Function to display books\nasync function showBooks(renderedContent) {\n    booksContainer.innerHTML = renderedContent;\n    const titleElement = document.querySelector('.books-box-desc-title');\n    \n    if (titleElement) {\n        wrapLastWord(titleElement);\n    }\n}\n// Function to display categories\nasync function showCategories() {\n    const renderedCategories = await getCategoryList();\n    categoriesListContainer.innerHTML = renderedCategories;\n}\n\n// Function to display top books\nexport async function showTopBooks() {\n    const windowWidth = window.innerWidth;\n    const booksPerRow = determineBooksPerRow(windowWidth);\n    const renderedTop = await getTopBooks(booksPerRow);\n    showBooks(renderedTop);\n}\n\n// Function to display books by category\nexport async function showBooksByCategory(categoryName) {\n    const renderedBooks = await getBooksByCategory(categoryName);\n    showBooks(renderedBooks);\n}\n\n// Function to wrap the last word in the title\nfunction wrapLastWord(titleElement) {\n    const textContent = titleElement.textContent.split(\" \");\n    const lastWord = textContent.pop();\n    const updatedContent = textContent.join(\" \") + (textContent.length > 0 ? ` <span class=\"books-title-color\">${lastWord}</span>` : lastWord);\n    titleElement.innerHTML = updatedContent;\n}\n// Function to determine the number of books per row based on window width\nfunction determineBooksPerRow(windowWidth) {\n    if (windowWidth >= 1440) {\n        return BOOKS_PER_ROW_MAP.largeScreen;\n    } else if (windowWidth < 768) {\n        return BOOKS_PER_ROW_MAP.smallScreen;\n    } else {\n        return BOOKS_PER_ROW_MAP.default;\n    }\n}\n\n// Initialize the page\nif (booksContainer) {\n    showTopBooks();\n    showCategories();\n\n    categoriesListContainer.addEventListener('click', handleCategoryClick);\n    booksContainer.addEventListener('click', handleSeeMoreClick);\n}\n\n// Event handler for category click\nfunction handleCategoryClick(e) {\n    e.preventDefault();\n    const target = e.target;\n\n    if (target.tagName === 'A') {\n        const categoryName = target.dataset.categoryName;\n\n        categoriesListContainer.querySelector('.js-categories-current').classList.remove('js-categories-current');\n        target.classList.add('js-categories-current');\n\n        if (categoryName) {\n            showBooksByCategory(categoryName);\n        } else {\n            showTopBooks();\n        }\n    }\n}\n\n// Event handler for \"See More\" click\nfunction handleSeeMoreClick(e) {\n    e.preventDefault();\n    const target = e.target;\n\n    if (target.classList.contains('books-btn-see-more')) {\n        const categoryName = target.dataset.categoryName;\n\n        categoriesListContainer.querySelector('.js-categories-current').classList.remove('js-categories-current');\n        categoriesListContainer.querySelector(`[data-categoryName=\"${categoryName}\"]`).classList.add('js-categories-current');\n\n        showBooksByCategory(categoryName);\n    }\n}\n"],"names":["renderOneBook","books","el","_id","book_image","title","author","renderTopBooks","data","booksPerRow","categorieName","renderCategoriesList","renderBooksByCategory","categoryName","BASE_URL","fetchData","endpoint","params","fetchUrl","axios","error","getTopBooks","getCategoryList","getBooksByCategory","booksContainer","categoriesListContainer","BOOKS_PER_ROW_MAP","showBooks","renderedContent","titleElement","wrapLastWord","showCategories","renderedCategories","showTopBooks","windowWidth","determineBooksPerRow","renderedTop","showBooksByCategory","renderedBooks","textContent","lastWord","updatedContent","handleCategoryClick","handleSeeMoreClick","target"],"mappings":"0xBACA,SAASA,EAAcC,EAAO,CAsB5B,OArBsBA,EAAM,IAAIC,GAAM,CAClC,KAAM,CAAC,IAAAC,EAAK,WAAAC,EAAY,MAAAC,EAAO,OAAAC,CAAM,EAAIJ,EACzC,MAAO,iCAAiCC,CAAG;AAAA;AAAA;AAAA;AAAA,uBAI1BC,CAAU;AAAA,uBACVC,CAAK;AAAA;AAAA;AAAA,uCAGWF,CAAG;AAAA;AAAA;AAAA;AAAA;AAAA,gDAKME,CAAK;AAAA,iDACJC,CAAM;AAAA;AAAA,kBAGvD,CAAG,EAAE,KAAK,EAAE,CAGZ,CAEO,MAAMC,EAAiB,CAACC,EAAMC,IAW5B,+EAVoBD,EAAK,IAAIN,GAAM,CACtC,MAAMQ,EAAgBR,EAAG,UACnBD,EAAQD,EAAcE,EAAG,MAAM,MAAM,EAAGO,CAAW,CAAC,EAC1D,MAAO;AAAA,yCAC4BC,CAAa;AAAA,qCACjBT,CAAK;AAAA,sCACJS,CAAa;AAAA,aAEnD,CAAG,EAAE,KAAK,EAAE,CAE8F,SAG7FC,EAAwBH,GAK5B,8GAJiBA,EAAK,IAAIN,GACxB,8DAA8DA,EAAG,SAAS,KAAKA,EAAG,SAAS,WACnG,EAAE,KAAK,EAAE,CAE0H,GAGzHU,EAAwB,CAACJ,EAAMK,IAAiB,CAC3D,MAAMZ,EAAQD,EAAcQ,CAAI,EAKhC,MAJuB;AAAA,8BACKK,CAAY;AAAA,0CACAZ,CAAK;AAAA,eAG/C,ECuBMa,EAAW,sCAEXC,EAAY,MAAOC,EAAUC,EAAS,OAAS,CACnD,MAAMC,EAAW,GAAGJ,CAAQ,SAASE,CAAQ,GAE7C,GAAI,CAEF,OADiB,MAAMG,EAAM,IAAID,EAAU,CAAE,OAAAD,CAAM,CAAE,GACrC,IACjB,OAAQG,EAAO,CACd,QAAQ,IAAIA,CAAK,CAClB,CACH,EAEaC,EAAc,MAAOZ,GAAgB,CAChD,MAAMD,EAAO,MAAMO,EAAU,aAAa,EAC1C,OAAOR,EAAeC,EAAMC,CAAW,CACzC,EAEaa,EAAkB,SAAY,CACzC,MAAMd,EAAO,MAAMO,EAAU,iBAAiB,EAC9C,OAAOJ,EAAqBH,CAAI,CAClC,EAEae,EAAqB,MAAOV,GAAiB,CACxD,MAAML,EAAO,MAAMO,EAAU,aAAc,CAAE,SAAUF,CAAY,CAAE,EACrE,OAAOD,EAAsBJ,EAAMK,CAAY,CACjD,ECRMW,EAAiB,SAAS,cAAc,YAAY,EACpDC,EAA0B,SAAS,cAAc,kBAAkB,EAEnEC,EAAoB,CACtB,QAAW,EACX,YAAe,EACf,YAAe,CACnB,EAGA,eAAeC,EAAUC,EAAiB,CACtCJ,EAAe,UAAYI,EAC3B,MAAMC,EAAe,SAAS,cAAc,uBAAuB,EAE/DA,GACAC,EAAaD,CAAY,CAEjC,CAEA,eAAeE,GAAiB,CAC5B,MAAMC,EAAqB,MAAMV,IACjCG,EAAwB,UAAYO,CACxC,CAGO,eAAeC,GAAe,CACjC,MAAMC,EAAc,OAAO,WACrBzB,EAAc0B,EAAqBD,CAAW,EAC9CE,EAAc,MAAMf,EAAYZ,CAAW,EACjDkB,EAAUS,CAAW,CACzB,CAGO,eAAeC,EAAoBxB,EAAc,CACpD,MAAMyB,EAAgB,MAAMf,EAAmBV,CAAY,EAC3Dc,EAAUW,CAAa,CAC3B,CAGA,SAASR,EAAaD,EAAc,CAChC,MAAMU,EAAcV,EAAa,YAAY,MAAM,GAAG,EAChDW,EAAWD,EAAY,MACvBE,EAAiBF,EAAY,KAAK,GAAG,GAAKA,EAAY,OAAS,EAAI,oCAAoCC,CAAQ,UAAYA,GACjIX,EAAa,UAAYY,CAC7B,CAEA,SAASN,EAAqBD,EAAa,CACvC,OAAIA,GAAe,KACRR,EAAkB,YAClBQ,EAAc,IACdR,EAAkB,YAElBA,EAAkB,OAEjC,CAGIF,IACAS,IACAF,IAEAN,EAAwB,iBAAiB,QAASiB,CAAmB,EACrElB,EAAe,iBAAiB,QAASmB,CAAkB,GAI/D,SAASD,EAAoB,EAAG,CAC5B,EAAE,eAAc,EAChB,MAAME,EAAS,EAAE,OAEjB,GAAIA,EAAO,UAAY,IAAK,CACxB,MAAM/B,EAAe+B,EAAO,QAAQ,aAEpCnB,EAAwB,cAAc,wBAAwB,EAAE,UAAU,OAAO,uBAAuB,EACxGmB,EAAO,UAAU,IAAI,uBAAuB,EAExC/B,EACAwB,EAAoBxB,CAAY,EAEhCoB,GAEP,CACL,CAGA,SAASU,EAAmB,EAAG,CAC3B,EAAE,eAAc,EAChB,MAAMC,EAAS,EAAE,OAEjB,GAAIA,EAAO,UAAU,SAAS,oBAAoB,EAAG,CACjD,MAAM/B,EAAe+B,EAAO,QAAQ,aAEpCnB,EAAwB,cAAc,wBAAwB,EAAE,UAAU,OAAO,uBAAuB,EACxGA,EAAwB,cAAc,uBAAuBZ,CAAY,IAAI,EAAE,UAAU,IAAI,uBAAuB,EAEpHwB,EAAoBxB,CAAY,CACnC,CACL"}